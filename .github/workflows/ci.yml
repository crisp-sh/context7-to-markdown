name: CI

on:
  push:
    branches: [main, master]
  pull_request:
    branches: ["*"]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30  # Prevent hanging jobs
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
      fail-fast: false  # Don't cancel all jobs if one fails
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Display Python version
        run: |
          python --version
          python -m pip --version

      - name: Upgrade pip
        run: |
          python -m pip install --upgrade pip
          python -m pip --version

      - name: Install hatch
        run: |
          pip install --verbose hatch
          hatch --version

      - name: Create hatch environment
        run: |
          hatch env create --verbose
          hatch env show

      - name: Install project dependencies
        run: |
          hatch run pip list
          hatch run pip install -e . --verbose

      - name: Install dev tools
        run: |
          hatch run pip install --verbose black isort bandit safety

      # ---------------- Code-quality gates ----------------
      - name: Lint (ruff)
        run: hatch run ruff check c2md

      - name: Style check (black)
        run: hatch run black --check .

      - name: Import order check (isort)
        run: hatch run isort --check-only .

      - name: Security scan (bandit)
        run: hatch run bandit -r c2md

      - name: Dependency vulnerability scan (safety)
        run: hatch run safety check --full-report || true

      # ---------------- Tests & coverage ----------------
      - name: Run tests with coverage
        run: |
          hatch run pytest --cov=c2md --cov-report=xml -v

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: coverage.xml
          flags: python-${{ matrix.python-version }}
          token: ${{ secrets.CODECOV_TOKEN }}
        if: ${{ env.CODECOV_TOKEN != '' }}

      - name: Persist coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python-version }}
          path: coverage.xml